= Conclusion

As part of this thesis, we have implemented the algorithm for generalised rewriting proposed by Matthieu Sozeau @sozeau:inria-00628904 and identified some critical performance issues with the literature version. We extracted and presented the essence of the historically grown mixture of algorithms that is used in the majority of Coq proofs. We extended the algorithm to be as powerful as the version we have seen in the literature while still keeping the enumerated benefits. Lastly, we have shown that both algorithms produce the same proofs despite having evidently less metavariables to be solved in the proof search that grows exponentially depending on the amount of metavariables. Finally, we have implemented the improved algorithm in Lean 4.

We have not shown a detailed complexity analysis that compares the two mentioned algorithms and leave that for future work. While we can see that the amount of constraints of the updated `ORew` algorithm never exceeds the amount of the constraints generated by the `Rew` algorithm, this detailed analysis can become tedious to estimate exactly. This is challenging because we would have to find out what represents the worst-case scenario considering that functions and its arguments are treated differently in the optimised algorithm.